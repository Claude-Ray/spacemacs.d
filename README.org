* Personal Spacemacs Configuration
  
Happy hacking!

* Table of Contents                                                     :TOC:
- [[#personal-spacemacs-configuration][Personal Spacemacs Configuration]]
- [[#setup][Setup]]
  - [[#dependencies][Dependencies]]
  - [[#installation][Installation]]
    - [[#formulae][Formulae]]
    - [[#tools][Tools]]
    - [[#fonts][Fonts]]
    - [[#input-method][Input Method]]
    - [[#nodejs][Node.js]]
      - [[#formatters--linters][formatters && linters]]
    - [[#c-c][C-C++]]
      - [[#backend][backend]]
- [[#faq][FAQ]]
  - [[#why-tramp-hangs-when-spacemacs-starts-up][Why tramp hangs when Spacemacs starts up?]]
    - [[#remote-server-is-using-zsh][Remote server is using zsh]]
    - [[#helm-using-tramp-which-tries-to-figure-out-some-sshdns-settings-at-startup][Helm using Tramp which tries to figure out some SSH/DNS settings at startup]]
    - [[#recentf][recentf]]
  - [[#how-to-set-up-nodejs-autocompletion][How to set up Node.js autocompletion?]]
  - [[#why-js2-mode-always-warning-missing--after-statement][Why js2-mode always warning "missing ; after statement"?]]
  - [[#some-cc-headers-are-not-recognized][Some C/C++ headers are not recognized]]
    - [[#1-install-c-headers][1. Install C headers]]
    - [[#2-include-c-headers][2. Include C++ headers]]
  - [[#how-to-troubleshoot-the-emacsdcacherecentf-locked-by-xxx-warning-message][How to troubleshoot the "...emacs.d/.cache/recentf locked by xxx" warning message?]]
  - [[#how-to-ignore-paths-such-as-node_modules-when-using-spc-][How to ignore paths such as "node_modules" when using =SPC /=?]]
  - [[#how-to-fix-chinese-font-alignment-in-emacs-gui][How to fix chinese font alignment in Emacs GUI?]]

* Setup
** Dependencies
- MacOS 10.14+
- Emacs 26.2+

** Installation
*** Formulae
    #+begin_src bash
      brew tap d12frosted/emacs-plus && brew install emacs-plus --without-spacemacs-icon
    #+end_src
*** Tools
    #+begin_src bash
      brew install coreutils ripgrep plantuml libvterm
    #+end_src
*** Fonts
    #+begin_src bash
      brew tap homebrew/cask-fonts && brew cask install font-source-code-pro
    #+end_src
*** Input Method
    Rime(Squirrel) with pyim is recommended.
#+begin_src bash
  # after building liberime.so
  sudo cp /Library/Input\ Methods/Squirrel.app/Contents/Frameworks/librime.1.dylib /usr/local/lib
#+end_src
    Read [[https://manateelazycat.github.io/emacs/2019/07/24/use-rime-in-emacs.html][Use Rime In Emacs]] written by manateelazycat for more details.
*** Node.js
**** formatters && linters
#+begin_src bash
  npm install -g js-beautify typescript typescript-language-server tslint eslint
#+end_src
*** C-C++
**** backend
#+begin_src bash
  brew install ccls
#+end_src

Read on [[#some-cc-headers-are-not-recognized][FAQ]] if C/C++ headers are not recognized.

* FAQ 
** Why tramp hangs when Spacemacs starts up?
After I tried tramp for ssh connecting remote server, Spacemacs hangs with error =Tramp: Waiting for prompts from remote shell= each time I start it up.
*** Remote server is using zsh
https://www.emacswiki.org/emacs/TrampMode#toc9
Maybe zsh of remote server is the root problem.
*** Helm using Tramp which tries to figure out some SSH/DNS settings at startup
https://github.com/syl20bnr/spacemacs/blob/develop/doc/FAQ.org#why-is-spacemacs-hanging-on-startup

I have tried to add these settings to =user-init=, but it didn't work.
#+begin_src elisp
(setq tramp-ssh-controlmaster-options
      "-o ControlMaster=auto -o ControlPath='tramp.%%C' -o ControlPersist=no")
#+end_src

Editing =~/.ssh/config=, no effect either.
#+begin_src
Host *
ControlMaster auto
ControlPath ~/.ssh/master -%r@%h:%p
ControlPersist = no
#+end_src

*** recentf
Try =M-x recentf-edit-list= to remove ssh files from the list. Fix it!
Further more, clear all the records of this ssh connection from files in =.emacs.d/.cache/= —— =tramp=, =savehist=, =recentf= etc.
** How to set up Node.js autocompletion?
Does it work after applying the steps of tern's documents? If not, give lsp-mode a try.
** Why js2-mode always warning "missing ; after statement"?
Reference from [[https://emacs.stackexchange.com/questions/26949/can-i-turn-off-or-switch-the-syntax-checker-for-js2-mode][lunaryorn's answer]]:

The warning comes from JS2 Mode which implements its own parser for Javascript and warns about a couple of issues.
As noted in the other answer the particular warning you observed is controlled by the user option =js2-strict-missing-semi-warning= which you can set to nil in your init file or via M-x customize so as to turn off the warning.

When using JS2 Mode together with Flycheck we generally recommend to turn off all warnings of JS2 Mode by setting the variables =js2-mode-show-parse-errors= and =js2-mode-show-strict-warnings= to nil as in almost all cases Flycheck's syntax checking provides superior error reporting.

** Some C/C++ headers are not recognized
*** 1. Install C headers
MacOS Majavo 10.14
#+begin_src bash
  open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg
#+end_src

MacOS Catalina 10.15
#+begin_src bash
  # Install Xcode command line tool
  xcode-select --install
  # Create symlinks to /user/local/include for C headers
  ln -s /Library/Developer/CommandLineTools/SDKs/MacOSX.sdk/usr/include/* /usr/local/include/
  # Reinstall ccls and its dependencies if the headers are not working correctly
#+end_src

*** 2. Include C++ headers
First you need to get the absolute path to =/usr/local/bin/ccls=, depending on the version you installed. And my path is =/usr/local/Cellar/ccls/HEAD-8b03321/bin/ccls=.

#+begin_src bash
  ls -l /usr/local/bin/ccls
  # optionally back up the symbolic link installed by homebrew
  mv /usr/local/bin/ccls /usr/local/bin/ccls.brew
  # create a new executable file
  touch /usr/local/bin/ccls
  chmod +x /usr/local/bin/ccls
#+end_src

Putting this shell in =/usr/local/bin/ccls=.
#+begin_src bash
  #!/bin/sh
  exec /usr/local/Cellar/ccls/HEAD-8b03321/bin/ccls -init='{"clang":{"extraArgs":["-isystem", "/Library/Developer/CommandLineTools/usr/include/c++/v1"]}}' "$@"
#+end_src

Further more, =/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1= can also be used as =-isystem= on MacOS Catalina.

** How to troubleshoot the "...emacs.d/.cache/recentf locked by xxx" warning message?
   #+begin_example
   Please type q, s, or p; or ? for help
   ...emacs.d/.cache/recentf locked by claude@ray (pid 5647): (s, q, p, ?)? 
   #+end_example
   It occurs frequently on Mac OSX. According to this [[https://github.com/syl20bnr/spacemacs/issues/5186][issue]], the bug still hasn't been solved compeletely. But it can be avoided. 
   You could clear the auto-save timer of recentf by adding the following into =(dotspacemacs/user-config)=:
   #+begin_src elisp
     (cancel-timer recentf-auto-save-timer)
   #+end_src
   Then you have to call =recentf-save-list= manually to save recent files.

** How to ignore paths such as "node_modules" when using =SPC /=?
   This is a bug of projectile. Related issue - [[https://github.com/bbatsov/projectile/issues/1075][Projectile does not ignore contents in .gitignore after opening respective the file directly]].
   Adding =-/node_modules= to the =.projectile= file under your project root directory will fix it.
   A better approach is to install =rg= with =brew install ripgrep=, then helm/ivy will use rg as =dotspacemacs-search-tools= instead of ag.
   (dotspacemacs-search-tools uses the first installed tool of the list =("rg" "ag" "pt" "ack" "grep")=.)
** How to fix chinese font alignment in Emacs GUI?
   It is recommended to call =spacemacs//set-monospaced-font= to set chinese and english fonts respectively.

   Alternatively, you can fix the alignment problem in org-table only. For example:
   #+begin_src elisp
    (with-eval-after-load 'org
      (set-face-attribute 'org-link nil :font "Sarasa Mono T SC 16")
      (set-face-attribute 'org-table nil
                          :font "Sarasa Mono T SC 16"))
   #+end_src
   Font [[https://github.com/be5invis/Sarasa-Gothic][Sarasa Gothic]] can be installed by running =brew cask install font-sarasa-gothic=.
